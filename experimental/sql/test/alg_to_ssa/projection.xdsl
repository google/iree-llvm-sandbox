// RUN: rel_opt.py -p alg-to-ssa %s | filecheck %s

module() {
  rel_alg.project() ["names" = ["a", "b"]] {
    rel_alg.table() ["table_name" = "t"] {
      rel_alg.schema_element() ["elt_name" = "a", "elt_type" = !rel_alg.string]
      rel_alg.schema_element() ["elt_name" = "b", "elt_type" = !rel_alg.int64]
      rel_alg.schema_element() ["elt_name" = "c", "elt_type" = !rel_alg.int64]
    }
  } {
    rel_alg.column() ["col_name" = "a"]
    rel_alg.column() ["col_name" = "b"]
  }
}

//      CHECK:  %0 : !rel_ssa.bag<[!rel_ssa.schema_element<"a", !rel_ssa.string>, !rel_ssa.schema_element<"b", !rel_ssa.int64>, !rel_ssa.schema_element<"c", !rel_ssa.int64>]> = rel_ssa.table() ["table_name" = "t"]
// CHECK-NEXT:  %1 : !rel_ssa.bag<[!rel_ssa.schema_element<"a", !rel_ssa.string>, !rel_ssa.schema_element<"b", !rel_ssa.int64>]> = rel_ssa.project(%0 : !rel_ssa.bag<[!rel_ssa.schema_element<"a", !rel_ssa.string>, !rel_ssa.schema_element<"b", !rel_ssa.int64>, !rel_ssa.schema_element<"c", !rel_ssa.int64>]>) {
// CHECK-NEXT:    %2 : !rel_ssa.string = rel_ssa.column() ["col_name" = "a"]
// CHECK-NEXT:    %3 : !rel_ssa.int64 = rel_ssa.column() ["col_name" = "b"]
// CHECK-NEXT:    rel_ssa.yield_tuple(%2 : !rel_ssa.string, %3 : !rel_ssa.int64)
// CHECK-NEXT:  }
