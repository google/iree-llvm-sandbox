// RUN: rel_opt.py %s | filecheck %s

builtin.module() {
 func.func() ["sym_name" = "main", "function_type" = !fun<[], []>, "sym_visibility" = "private"] {
    %0 : !iterators.stream<!llvm.struct<(!i32)>> = iterators.constantstream() ["value" = [[0 : !i32], [1 : !i32], [2 : !i32], [3 : !i32]]]
    %1 : !iterators.stream<!llvm.struct<(!i32)>> = iterators.reduce(%0 : !iterators.stream<!llvm.struct<(!i32)>>) ["reduceFuncRef" = @sum_struct]
    iterators.sink(%1 : !iterators.stream<!llvm.struct<(!i32)>>)
    func.return()
  }
  func.func() ["sym_name" = "sum_struct", "function_type" = !fun<[!llvm.struct<(!i32)>, !llvm.struct<(!i32)>], [!llvm.struct<(!i32)>]>, "sym_visibility" = "private"] {
  ^0(%2 : !llvm.struct<(!i32)>, %3 : !llvm.struct<(!i32)>):
    %lhsi : !i32 = llvm.extractvalue(%2 : !llvm.struct<(!i32)>) ["position" = [0 : !index]]
    %rhsi : !i32 = llvm.extractvalue(%3 : !llvm.struct<(!i32)>) ["position" = [0 : !index]]
    %i : !i32 = arith.addi(%lhsi : !i32, %rhsi : !i32)
    %result : !llvm.struct<(!i32)> = llvm.insertvalue(%2 : !llvm.struct<(!i32)>, %i : !i32) ["position" = [0 : !index]]
    func.return(%result : !llvm.struct<(!i32)>)
  }
}

//      CHECK: func.func() ["sym_name" = "main", "function_type" = !fun<[], []>, "sym_visibility" = "private"] {
// CHECK-NEXT:     %0 : !iterators.stream<!llvm.struct<(!i32)>> = iterators.constantstream() ["value" = [[0 : !i32], [1 : !i32], [2 : !i32], [3 : !i32]]]
// CHECK-NEXT:     %1 : !iterators.stream<!llvm.struct<(!i32)>> = iterators.reduce(%0 : !iterators.stream<!llvm.struct<(!i32)>>) ["reduceFuncRef" = @sum_struct]
// CHECK-NEXT:     iterators.sink(%1 : !iterators.stream<!llvm.struct<(!i32)>>)
// CHECK-NEXT:     func.return()
// CHECK-NEXT:   }
// CHECK-NEXT:   func.func() ["sym_name" = "sum_struct", "function_type" = !fun<[!llvm.struct<(!i32)>, !llvm.struct<(!i32)>], [!llvm.struct<(!i32)>]>, "sym_visibility" = "private"] {
// CHECK-NEXT:   ^0(%2 : !llvm.struct<(!i32)>, %3 : !llvm.struct<(!i32)>):
// CHECK-NEXT:     %lhsi : !i32 = llvm.extractvalue(%2 : !llvm.struct<(!i32)>) ["position" = [0 : !index]]
// CHECK-NEXT:     %rhsi : !i32 = llvm.extractvalue(%3 : !llvm.struct<(!i32)>) ["position" = [0 : !index]]
// CHECK-NEXT:     %i : !i32 = arith.addi(%lhsi : !i32, %rhsi : !i32)
// CHECK-NEXT:     %result : !llvm.struct<(!i32)> = llvm.insertvalue(%2 : !llvm.struct<(!i32)>, %i : !i32) ["position" = [0 : !index]]
// CHECK-NEXT:     func.return(%result : !llvm.struct<(!i32)>)
// CHECK-NEXT:   }
