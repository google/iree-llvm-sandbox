--- a/jax/BUILD
+++ b/jax/BUILD
@@ -70,6 +70,7 @@ package_group(
         # Intentionally avoid jax dependencies on jax.extend.
         # See https://jax.readthedocs.io/en/latest/jep/15856-jex.html
         "//third_party/py/jax/tests/...",
+        "public",
     ] + jax_extend_internal_users,
 )
 

--- a/jaxlib/cpu/BUILD
+++ b/jaxlib/cpu/BUILD
@@ -79,7 +79,7 @@ cc_library(
         ":ducc_fft_flatbuffers_cc",
         "@xla//xla/service:custom_call_status",
         "@com_github_google_flatbuffers//:flatbuffers",
-        "@ducc//:fft",
+        "@ducc//:fft_wrapper",
     ],
 )
 

--- a/jaxlib/mlir/BUILD.bazel
+++ b/jaxlib/mlir/BUILD.bazel
@@ -13,6 +13,7 @@
 # limitations under the License.
 
 load("//jaxlib:symlink_files.bzl", "symlink_inputs")
+load("@pip_deps//:requirements.bzl", "requirement")
 
 package(
     default_visibility = [
@@ -74,6 +75,141 @@ symlink_inputs(
     ],
 )
 
+symlink_inputs(
+    name = "bufferization_dialect",
+    rule = py_library,
+    symlinked_inputs = {"srcs": {"dialects": [
+        "@llvm-project//mlir/python:BufferizationOpsPyFiles",
+    ]}},
+    deps = [
+        ":core",
+        ":ir",
+        ":mlir",
+    ],
+)
+
+symlink_inputs(
+    name = "pdl_dialect",
+    rule = py_library,
+    symlinked_inputs = {"srcs": {"dialects": [
+        "@llvm-project//mlir/python:PDLPyFiles",
+    ]}},
+    deps = [
+        ":core",
+        ":ir",
+        ":mlir",
+        ":pdl_dialect_extension",
+    ],
+)
+
+symlink_inputs(
+    name = "complex_dialect",
+    rule = py_library,
+    symlinked_inputs = {"srcs": {"dialects": [
+        "@llvm-project//mlir/python:ComplexOpsPyFiles",
+    ]}},
+    deps = [
+        ":core",
+        ":ir",
+        ":mlir",
+    ],
+)
+
+symlink_inputs(
+    name = "linalg_dialect",
+    rule = py_library,
+    symlinked_inputs = {"srcs": {"dialects/linalg": [
+        "@llvm-project//mlir/python:LinalgOpsPackagePyFiles",
+    ]}},
+    deps = [
+        ":complex_dialect",
+        ":core",
+        ":ir",
+        ":mlir",
+        ":linalg_dialect_gen_files",
+        ":linalg_dialect_opdsl_files",
+        ":linalg_dialect_opdsl_lang_files",
+        ":linalg_dialect_opdsl_ops_files",
+        "//jaxlib/mlir/_mlir_libs:_mlirDialectsLinalg",
+        requirement("PyYAML"),
+    ],
+)
+
+symlink_inputs(
+    name = "linalg_dialect_gen_files",
+    rule = py_library,
+    symlinked_inputs = {"srcs": {"dialects": [
+        "@llvm-project//mlir/python:LinalgOpsPyFiles",
+    ]}},
+)
+
+symlink_inputs(
+    name = "linalg_dialect_opdsl_files",
+    rule = py_library,
+    symlinked_inputs = {"srcs": {"dialects/linalg/opdsl": [
+        "@llvm-project//mlir/python:LinalgOpsPackageOpDSLPyFiles",
+    ]}},
+)
+
+symlink_inputs(
+    name = "linalg_dialect_opdsl_lang_files",
+    rule = py_library,
+    symlinked_inputs = {"srcs": {"dialects/linalg/opdsl/lang": [
+        "@llvm-project//mlir/python:LinalgOpsPackageOpDSLLangPyFiles",
+    ]}},
+)
+
+symlink_inputs(
+    name = "linalg_dialect_opdsl_ops_files",
+    rule = py_library,
+    symlinked_inputs = {"srcs": {"dialects/linalg/opdsl/ops": [
+        "@llvm-project//mlir/python:LinalgOpsPackageOpDSLOpsPyFiles",
+    ]}},
+)
+
+symlink_inputs(
+    name = "transform_dialect",
+    rule = py_library,
+    symlinked_inputs = {"srcs": {"dialects": [
+        "@llvm-project//mlir/python:TransformOpsPyFiles",
+    ]}},
+    deps = [
+        ":core",
+        ":ir",
+        ":mlir",
+        ":transform_dialect_extensions",
+    ],
+)
+
+symlink_inputs(
+    name = "transform_dialect_extensions",
+    rule = py_library,
+    symlinked_inputs = {"srcs": {"dialects/transform": [
+        "@llvm-project//mlir/python:TransformOpsPackagePyFiles",
+        "@jasc//transform_ops:transform_ops",
+    ]}},
+    deps = [
+        ":core",
+        ":ir",
+        ":mlir",
+        "//jaxlib/mlir/_mlir_libs:_mlirDialectsTransform",
+    ],
+)
+
+symlink_inputs(
+    name = "pdl_dialect_extension",
+    rule = py_library,
+    symlinked_inputs = {"srcs": {"dialects": [
+        "@llvm-project//mlir/python:PDLPyFiles",
+    ]}},
+    deps = [
+        ":core",
+        ":ir",
+        ":mlir",
+        "//jaxlib/mlir/_mlir_libs:_mlirDialectsPDL",
+    ],
+)
+
 symlink_inputs(
     name = "math_dialect",
     rule = py_library,

--- a/jaxlib/mlir/_mlir_libs/BUILD.bazel
+++ b/jaxlib/mlir/_mlir_libs/BUILD.bazel
@@ -126,11 +126,14 @@ py_extension(
     linkopts = LINKOPTS,
     deps = [
         ":jax_dialects_capi_headers",
+        "@jasc//dialect:capi_headers",
         ":jaxlib_mlir_capi_shared_library",
         "@llvm-project//mlir:CAPIArithHeaders",
         "@llvm-project//mlir:CAPIIRHeaders",
         "@llvm-project//mlir:CAPIMathHeaders",
         "@llvm-project//mlir:CAPIMemRefHeaders",
+        "@llvm-project//mlir:CAPIPDLHeaders",
+        "@llvm-project//mlir:CAPITransformDialectHeaders",
         "@llvm-project//mlir:CAPITransformsHeaders",
         "@llvm-project//mlir:CAPIVectorHeaders",
         "@llvm-project//mlir:MLIRBindingsPythonHeaders",
@@ -139,6 +142,57 @@ py_extension(
     ],
 )
 
+py_extension(
+    name = "_mlirDialectsTransform",
+    srcs = [
+        "@llvm-project//mlir:lib/Bindings/Python/DialectTransform.cpp",
+    ],
+    copts = COPTS,
+    linkopts = LINKOPTS,
+    deps = [
+        ":jax_dialects_capi_headers",
+        ":jaxlib_mlir_capi_shared_library",
+        "@llvm-project//mlir:CAPIIRHeaders",
+        "@llvm-project//mlir:CAPITransformDialect",
+        "@llvm-project//mlir:MLIRBindingsPythonHeadersAndDeps",
+        "@pybind11",
+    ],
+)
+
+py_extension(
+    name = "_mlirDialectsPDL",
+    srcs = [
+        "@llvm-project//mlir:lib/Bindings/Python/DialectPDL.cpp",
+    ],
+    copts = COPTS,
+    linkopts = LINKOPTS,
+    deps = [
+        ":jax_dialects_capi_headers",
+        ":jaxlib_mlir_capi_shared_library",
+        "@llvm-project//mlir:CAPIIRHeaders",
+        "@llvm-project//mlir:CAPIPDL",
+        "@llvm-project//mlir:MLIRBindingsPythonHeadersAndDeps",
+        "@pybind11",
+    ],
+)
+
+py_extension(
+    name = "_mlirDialectsLinalg",
+    srcs = [
+        "@llvm-project//mlir:lib/Bindings/Python/DialectLinalg.cpp",
+    ],
+    copts = COPTS,
+    linkopts = LINKOPTS,
+    deps = [
+        ":jax_dialects_capi_headers",
+        ":jaxlib_mlir_capi_shared_library",
+        "@llvm-project//mlir:CAPIIRHeaders",
+        "@llvm-project//mlir:CAPILinalg",
+        "@llvm-project//mlir:MLIRBindingsPythonHeadersAndDeps",
+        "@pybind11",
+    ],
+)
+
 ##---------------------------------------------------------------------------##
 # MHLO Extensions
 ##---------------------------------------------------------------------------##
@@ -240,17 +294,30 @@ cc_library(
     name = "jaxlib_mlir_capi_objects",
     deps = [
         ":jax_dialects_capi",
+        "@jasc//dialect:capi",
+        "@jasc//transform_ops:jasc_transform_ops",
+        "@jasc//:mlir_lowering",
         "//jaxlib/mosaic:tpu_dialect_capi_objects",
+        "@com_google_protobuf//:protobuf",
         "@llvm-project//mlir:CAPIArithObjects",
+        "@llvm-project//mlir:CAPIInterfacesObjects",
         "@llvm-project//mlir:CAPIMathObjects",
         "@llvm-project//mlir:CAPIMemRefObjects",
+        "@llvm-project//mlir:CAPIPDLObjects",
+        "@llvm-project//mlir:CAPIRegisterEverythingObjects",
         "@llvm-project//mlir:CAPISparseTensorObjects",
+        "@llvm-project//mlir:CAPITransformDialectObjects",
         "@llvm-project//mlir:CAPITransformsObjects",
         "@llvm-project//mlir:CAPIVectorObjects",
-        "@llvm-project//mlir:MLIRBindingsPythonCAPIObjects",
+        "@llvm-project//mlir:CAPIDebugObjects",
+        "@llvm-project//mlir:MLIRBindingsPythonCoreNoCAPIObjects",
         "@stablehlo//:chlo_capi_objects",
         "@stablehlo//:stablehlo_capi_objects",
+        "@tsl//tsl/platform:env",
+        "@tsl//tsl/platform:env_impl",
         "@xla//xla/mlir_hlo:CAPIObjects",
+        "@xla//xla:xla_data_proto_cc",
+        "@xla//xla:xla_data_proto_cc_impl",
     ],
 )
 

--- a/jaxlib/mlir/_mlir_libs/_site_initialize_0.cc
+++ b/jaxlib/mlir/_mlir_libs/_site_initialize_0.cc
@@ -5,10 +5,14 @@
 #include "mlir-c/Dialect/Func.h"
 #include "mlir-c/Dialect/Math.h"
 #include "mlir-c/Dialect/MemRef.h"
+#include "mlir-c/Dialect/PDL.h"
+#include "mlir-c/Dialect/Transform.h"
 #include "mlir-c/Dialect/Vector.h"
+#include "mlir-c/RegisterEverything.h"
 #include "mlir-c/Transforms.h"
 #include "mlir/Bindings/Python/PybindAdaptors.h"
 #include "jaxlib/mlir/_mlir_libs/jax_dialects.h"
+#include "dialect/capi.h"
 
 #define REGISTER_DIALECT(name) \
     MlirDialectHandle name##_dialect = mlirGetDialectHandle__##name##__(); \
@@ -20,11 +24,15 @@ PYBIND11_MODULE(_site_initialize_0, m) {
   m.def("register_dialects", [](MlirDialectRegistry registry) {
     REGISTER_DIALECT(arith);
     REGISTER_DIALECT(func);
+    REGISTER_DIALECT(jasc);
     REGISTER_DIALECT(math);
     REGISTER_DIALECT(memref);
+    REGISTER_DIALECT(pdl);
     REGISTER_DIALECT(scf);
+    REGISTER_DIALECT(transform);
     REGISTER_DIALECT(vector);
     mlirRegisterTransformsPasses();
+    mlirRegisterAllDialects(registry);
     // Transforms used by JAX.
     mlirRegisterTransformsStripDebugInfo();
   });
