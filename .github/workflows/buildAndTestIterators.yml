name: Iterators Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Iterators Build and Test (Release Asserts)
    runs-on: ubuntu-20.04
    env:
      LLVM_SYMBOLIZER_PATH: /usr/lib/llvm-11/bin/llvm-symbolizer
    steps:
    - name: Compute Iterators base path
      run: |
        echo "ITERATORS_MAIN_SRC_DIR=${GITHUB_WORKSPACE}/sandbox/experimental/iterators" | tee -a $GITHUB_ENV
        echo "ITERATORS_MAIN_BINARY_DIR=${GITHUB_WORKSPACE}/sandbox/experimental/iterators/build" | tee -a $GITHUB_ENV

    - name: Set up Python
      uses: actions/setup-python@13ae5bb136fac2878aff31522b9efb785519f984 # v4.3.0
      with:
        python-version: 3.9

    - name: Checkout project
      uses: actions/checkout@v3
      with:
        path: sandbox
        submodules: recursive

    - name: Install Python depends
      run: |
        python -m pip install -r ${ITERATORS_MAIN_SRC_DIR}/requirements.txt

    - name: Install Ninja
      uses: llvm/actions/install-ninja@6a57890d0e3f9f35dfc72e7e48bc5e1e527cdd6c # Jan 17

    - name: Ccache for C++ compilation
      uses: hendrikmuhs/ccache-action@621a41397ed83711c72862638d9ff6e63fca3041 # v1.2.3
      with:
        key: ${{ runner.os }}-iterators
        # LLVM needs serious cache size
        max-size: 6G

    - name: Configure CMake
      run: |
        cmake \
          -DLLVM_ENABLE_PROJECTS="mlir;clang;clang-tools-extra" \
          -DLLVM_TARGETS_TO_BUILD=X86 \
          -DMLIR_INCLUDE_INTEGRATION_TESTS=ON \
          -DLLVM_ENABLE_ASSERTIONS=ON \
          -DBUILD_SHARED_LIBS=ON \
          -DLLVM_INCLUDE_UTILS=ON \
          -DLLVM_INSTALL_UTILS=ON \
          -DMLIR_ENABLE_BINDINGS_PYTHON=ON \
          -DMLIR_ENABLE_PYTHON_BENCHMARKS=ON \
          -DPython3_EXECUTABLE=$(which python) \
          -DLLVM_EXTERNAL_PROJECTS=iterators \
          -DLLVM_EXTERNAL_ITERATORS_SOURCE_DIR=${ITERATORS_MAIN_SRC_DIR} \
          -DLLVM_ENABLE_LLD=ON \
          -DLLVM_CCACHE_BUILD=ON \
          -DCMAKE_EXPORT_COMPILE_COMMANDS=TRUE \
          -DCMAKE_BUILD_TYPE=RelWithDebInfo \
          -DCMAKE_C_COMPILER:FILEPATH=clang \
          -DCMAKE_CXX_COMPILER:FILEPATH=clang++ \
          -S${ITERATORS_MAIN_SRC_DIR}/third_party/llvm-project/llvm \
          -B${ITERATORS_MAIN_BINARY_DIR} -G Ninja
        echo "PYTHONPATH=${PYTHONPATH}:${ITERATORS_MAIN_BINARY_DIR}/tools/iterators/python_packages" | tee -a $GITHUB_ENV

    - name: Build
      run: |
        cmake --build ${ITERATORS_MAIN_BINARY_DIR} --target iterators-all
        ccache -s

    - name: Run lit tests
      run: |
        cd ${GITHUB_WORKSPACE}/sandbox
        # python run_tests.py --iterators-tests

    - name: Run benchmarks
      run: |
        # ${GITHUB_WORKSPACE}/sandbox/experimental/iterators/benchmarks/inner_product/run.sh test | tee /tmp/result.jsonl
        # ${GITHUB_WORKSPACE}/sandbox/experimental/iterators/benchmarks/inner_product/plot.sh -i /tmp/result.jsonl

    - name: Archive benchmark plots
      uses: actions/upload-artifact@v3
      with:
        name: iterators-benchmark-plots
        path: |
          sandbox/experimental/iterators/benchmarks/**/*.pdf
