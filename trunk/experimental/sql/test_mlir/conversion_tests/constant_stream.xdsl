// RUN: rel_opt.py -t mlir %s | filecheck %s

module() {
  func.func() ["sym_name" = "main", "function_type" = !fun<[], []>, "sym_visibility" = "public"] {
    %empty : !iterators.stream<!llvm.struct<"", []>> = iterators.constantstream() ["value" = [[]]]
    %i32 : !iterators.stream<!llvm.struct<"", [!i32]>> = iterators.constantstream() ["value" = [[42 : !i32]]]
    %i32i64 : !iterators.stream<!llvm.struct<"", [!i32, !i64]>> = iterators.constantstream() ["value" = [[42 : !i32, 1337 : !i64]]]
    %two_elems : !iterators.stream<!llvm.struct<"", [!i32]>> = iterators.constantstream() ["value" = [[42 : !i32], [1337 : !i32]]]
    func.return()
  }
}

//      CHECK: func.func public @main() {
// CHECK-NEXT:     %0 = "iterators.constantstream"() {value = [[]]} : () -> !iterators.stream<!llvm.struct<()>>
// CHECK-NEXT:     %1 = "iterators.constantstream"() {value = [[42 : i32]]} : () -> !iterators.stream<!llvm.struct<(i32)>>
// CHECK-NEXT:     %2 = "iterators.constantstream"() {value = [[42 : i32, 1337]]} : () -> !iterators.stream<!llvm.struct<(i32, i64)>>
// CHECK-NEXT:     %3 = "iterators.constantstream"() {value = [[42 : i32], [1337 : i32]]} : () -> !iterators.stream<!llvm.struct<(i32)>>
// CHECK-NEXT:     return
// CHECK-NEXT:   }
